package constant

import "fmt"

type ERROR_CODE string
type ERROR_MSG error

var (

	// forbidden
	ERR_UNAUTHORIZED             ERROR_CODE = "ERR_UNAUTHORIZED"
	ERR_FORBIDDEN                ERROR_CODE = "ERR_FORBIDDEN"
	ERR_SERVICE_UNAVAILABLE      ERROR_CODE = "ERR_SERVICE_UNAVAILABLE"
	ERR_INTERNAL_SERVER_ERROR    ERROR_CODE = "ERR_INTERNAL_SERVER_ERROR"
	ERR_NOT_IMPLEMENTED          ERROR_CODE = "ERR_NOT_IMPLEMENTED"
	ERR_NOT_IMPLEMENT_FOR_MASTER ERROR_CODE = "ERR_NOT_IMPLEMENT_FOR_MASTER"
	ERR_DB_CONNECTION_ERROR      ERROR_CODE = "ERR_DB_CONNECTION_ERROR"
	// token
	ERR_TOKEN_IS_EMPTY   ERROR_CODE = "ERR_TOKEN_IS_EMPTY"
	ERR_TOKEN_IS_INVALID ERROR_CODE = "ERR_TOKEN_IS_INVALID"
	ERR_TOKEN_IS_EXPIRED ERROR_CODE = "ERR_TOKEN_IS_EXPIRED"

	ERR_REFRESH_TOKEN_INVALID ERROR_CODE = "ERR_REFRESH_TOKEN_INVALID"

	// request
	ERR_REQUEST_INVALID         ERROR_CODE = "ERR_REQUEST_INVALID"
	ERR_REQUEST_IS_EXISTED      ERROR_CODE = "ERR_REQUEST_IS_EXISTED"
	ERR_REQUEST_NOTFOUND        ERROR_CODE = "ERR_REQUEST_NOTFOUND"
	ERR_REQUEST_IS_EXPIRED      ERROR_CODE = "ERR_REQUEST_IS_EXPIRED"
	ERR_REQUEST_CODE_IS_INVALID ERROR_CODE = "ERR_REQUEST_CODE_IS_INVALID"

	// device
	ERR_DEVICE_ID_INVALID ERROR_CODE = "ERR_DEVICE_ID_INVALID"
)

var MAP_ERROR_CODE = map[ERROR_CODE]string{
	ERR_UNAUTHORIZED:             "unauthorized",
	ERR_FORBIDDEN:                "forbidden",
	ERR_SERVICE_UNAVAILABLE:      "service unavailable",
	ERR_INTERNAL_SERVER_ERROR:    "internal server error",
	ERR_NOT_IMPLEMENTED:          "not implemented",
	ERR_NOT_IMPLEMENT_FOR_MASTER: "not implemented for master",
	ERR_TOKEN_IS_EMPTY:           "token is empty",
	ERR_TOKEN_IS_INVALID:         "token is invalid",
	ERR_TOKEN_IS_EXPIRED:         "token is expired",
	ERR_REFRESH_TOKEN_INVALID:    "refresh token invalid",
	ERR_REQUEST_INVALID:          "request invalid",
	ERR_REQUEST_IS_EXISTED:       "request is existed",
	ERR_REQUEST_NOTFOUND:         "request not found",
	ERR_REQUEST_IS_EXPIRED:       "request is expired",
	ERR_REQUEST_CODE_IS_INVALID:  "request code is invalid",
}

func NewError(code ERROR_CODE) ERROR_MSG {
	return fmt.Errorf("%s", code)
}
